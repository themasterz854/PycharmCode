#x = [99, 114, 121, 112, 116, 111, 123, 65, 83, 67, 73, 73, 95, 112, 114, 49, 110, 116, 52, 98, 108, 51, 125]
#for i in x:
 #   print(chr(i),end ="")

#print(bytes.fromhex("63727970746f7b596f755f77696c6c5f62655f776f726b696e675f776974685f6865785f737472696e67735f615f6c6f747d"))

#import base64
#print(base64.b64encode(bytes.fromhex("72bca9b68fc16ac7beeb8f849dca1d8a783e8acf9679bf9269f7bf")))

import Crypto.Util.number

#print(Crypto.Util.number.long_to_bytes(11515195063862318899931685488813747395775516287289682636499965282714637259206269))

import pwn

#print(pwn.xor("label",13))

#KEY1 = bytes.fromhex("a6c8b6733c9b22de7bc0253266a3867df55acde8635e19c73313")
#KEY2 = bytes.fromhex("c1545756687e7573db23aa1c3452a098b71a7fbf0fddddde5fc1")

#x = pwn.xor(bytes.fromhex("04ee9855208a2cd59091d04767ae47963170d1660df7f56f5faf"),KEY2)
#flag = pwn.xor(x,KEY1)
#print(flag)

#x = bytes.fromhex("73626960647f6b206821204f21254f7d694f7624662065622127234f726927756d")
#print(x)
#y = pwn.xor(x, b'0')
#print(y)
#print(ascii("\x10X\x11\x10\x7f\x11\x15\x7fMY\x7fF\x14V\x10UR\x11\x17\x13\x7fBY\x17E"))

#string = "73626960647f6b206821204f21254f7d694f7624662065622127234f726927756d"

#string_ord = [o for o in bytes.fromhex(string)]
#for order in range(256):
 #   possible_flag_ord = [order ^ o for o in string_ord]
  #  possible_flag = "".join(chr(o) for o in possible_flag_ord)
  #  if possible_flag.startswith("crypto"):
   #     flag = possible_flag
   #     break

#print("Flag:")
#print(flag)"
#x = pwn.xor(0xC4115,0x4cf8)

#print(hex(0xc4115 ^ 0x4cf8)p
#e = 65537
#p = 857504083339712752489993810777
#q = 1029224947942998075080348647219
#n = p*q
#phi = (p-1) * (q-1)

#d = pow(e,-1,phi)

#c = 77578995801157823671636298847186723593814843845525223303932
#print(pow(c,d,n))

n =
e1 = 8375972158636797786548577344558505450112681309982680616741458789185399482197012478400423551953783500250330541157305333482201605403620268065740344262413823
e2 = 9128793155070840535080205969507962439039031605720806804763149530349199831106571278408012664715680400070955132546917432623647045632970000343002913652288209
c1 = 29524348801794964246525254532746713489012552231410877873654939192189703465778296630557998034900043199907199464501502422343646428763498020126607675457790939237909670566089640861118870789633071531549069646630094816802160739456356896854178234979317705698646150792991374822196668641499458235328444344270941870543
c2 = 825867741840930096690439898724154394754800799223845838859824578770729255074121124412034818817911528819985514913112578135088797321508926965562531941359460065558479143429027198760649305412289175662555151155642495930716399386198048664669951825640037406326730868520265471418239793143052223128719670078633611153


